pipeline {
    
   agent any
   
   tools {
     maven 'Maven3'
     }
   
    stages {
        
        stage('Checkout') {
            steps {
        checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: '54b9915a-f482-4d6f-a887-730f192cfc25', url: 'https://github.com/kingsley4kings/TrainingRepo']]])
        }
     }
     
        stage('Build') {
            steps {
                   sh 'mvn clean install -f MyTechWebApp/pom.xml'   
            }
          }
          
          stage('Code Quality') {
              steps {
                      withSonarQubeEnv('SonarQube') {
                      sh 'mvn sonar:sonar -f MyTechWebApp/pom.xml' 
                  }
              }
           }
           
           stage('Nexus Upload') {
            steps {
                nexusArtifactUploader artifacts: [[artifactId: 'MyTechWebApp', classifier: '', file: 'MyTechWebApp/target/MyTechWebApp.war', type: 'war']], credentialsId: '5747629a-6b45-4b28-99be-1db78b1f9706', groupId: 'com.dept.app', nexusUrl: 'ec2-3-128-28-103.us-east-2.compute.amazonaws.com:8081', nexusVersion: 'nexus3', protocol: 'http', repository: 'maven-snapshots', version: '1.0-SNAPSHOT'
            }
           }
           
           stage('Dev Deploy') {
               steps {
                   deploy adapters: [tomcat9(credentialsId: '83ae2608-f318-4b3f-832b-223cbd309227', path: '', url: 'http://ec2-3-135-244-151.us-east-2.compute.amazonaws.com:8080/')], contextPath: null, war: '**/*.war'
               }
           }
           
           stage('slack notify') {
               steps {
                   slackSend channel: 'jenkins3jobs', message: 'DEV Training test job was successful and fine'
               }
           }
           
           stage('Dev Approval') {
               steps {
                    echo "Taking approval from DEV Manager for QA Deployment"
                    timeout(time: 7, unit: 'DAYS') {
                    input message: 'Do you want to deploy into QA?', submitter: 'admin'
               }
             }
          }
           
           stage('QA Deploy') {
               steps {
                   deploy adapters: [tomcat9(credentialsId: '83ae2608-f318-4b3f-832b-223cbd309227', path: '', url: http://ec2-3-135-244-151.us-east-2.compute.amazonaws.com:8080/')], contextPath: null, war: '**/*.war'
               }
           }
           
           stage('slack notify QA') {
               steps {
                   slackSend channel: 'jenkins3jobs', message: 'QA Training test deployment was successful please start your testing'
           
             }
            } 
           }
         
          }
          
